{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d1538f52\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"email-verification-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"이메일 인증\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.verificationMessage ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString($data.verificationMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","$data","verificationMessage","_hoisted_3","_toDisplayString","_createCommentVNode"],"sources":["/Users/ewoo2/Library/CloudStorage/OneDrive-개인/문서/GitHub/공개SW프로젝트-Mac/Internet_Programming/my-diary-app/client/src/components/EmailVerification.vue"],"sourcesContent":["<template>\n    <div class=\"email-verification-container\">\n      <h1>이메일 인증</h1>\n      <p v-if=\"verificationMessage\">{{ verificationMessage }}</p>\n    </div>\n  </template>\n  \n  <script>\n  import axios from 'axios';\n  \n  export default {\n    data() {\n      return {\n        verificationMessage: ''\n      };\n    },\n    created() {\n      this.verifyEmail();\n    },\n    methods: {\n        verifyEmail() {\n            const token = this.$route.query.token; // URL에서 토큰 가져오기\n            axios.get(`${process.env.VUE_APP_BACKEND_URL}/verify-email?token=${token}`)\n                .then(response => {\n                this.verificationMessage = response.data.message;\n                })\n                .catch(error => {\n                if (error.response && error.response.status === 410) { // 410 : 유효시간 만료\n                    this.verificationMessage = '만료되었습니다.';\n                } else {\n                    this.verificationMessage = '인증 중 오류가 발생했습니다.';\n                }\n            });\n        }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  .email-verification-container {\n    max-width: 400px;\n    margin: auto;\n    padding: 20px;\n    text-align: center;\n  }\n  </style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAA8B;gEACvCC,mBAAA,CAAe,YAAX,QAAM;;EAFhBC,GAAA;AAAA;;uBACIC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,UAAe,EACNC,KAAA,CAAAC,mBAAmB,I,cAA5BJ,mBAAA,CAA2D,KAHjEK,UAAA,EAAAC,gBAAA,CAGuCH,KAAA,CAAAC,mBAAmB,oBAH1DG,mBAAA,e"},"metadata":{},"sourceType":"module","externalDependencies":[]}