{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-page\"\n};\nconst _hoisted_2 = {\n  class: \"user-info\"\n};\nconst _hoisted_3 = {\n  class: \"main-container\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"hr\", null, null, -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  class: \"diary-content\"\n};\nconst _hoisted_6 = [\"innerHTML\"];\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = {\n  key: 1,\n  class: \"empty-diary\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 사용자 정보, 마이페이지 및 로그아웃 링크 \"), _createElementVNode(\"div\", _hoisted_2, [_createTextVNode(_toDisplayString($data.userName) + \"님 | \", 1 /* TEXT */), _createVNode(_component_router_link, {\n    to: \"/mypage\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"마이페이지\")]),\n    _: 1 /* STABLE */\n  }), _createTextVNode(\" | \"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.logout && $options.logout(...args))\n  }, \"로그아웃\")]), _createCommentVNode(\" 메인 컨테이너 \"), _createElementVNode(\"div\", _hoisted_3, [_createCommentVNode(\" 날짜 선택 \"), _createTextVNode(\" 일자 : \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedDate = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.fetchDiary && $options.fetchDiary(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.selectedDate]]), _hoisted_4, _createCommentVNode(\" 일기장 표시 \"), $data.diaryContent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createElementVNode(\"div\", {\n    innerHTML: $options.formattedDiaryContent\n  }, null, 8 /* PROPS */, _hoisted_6), _hoisted_7, _hoisted_8, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.editDiary && $options.editDiary(...args))\n  }, \"수정\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.newDiaryContent = $event),\n    cols: \"50\",\n    rows: \"20\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newDiaryContent]]), _hoisted_10, _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.saveDiary && $options.saveDiary(...args))\n  }, \"저장\")]))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","_createTextVNode","_toDisplayString","$data","userName","_createVNode","_component_router_link","to","default","_withCtx","_","href","onClick","_cache","args","$options","logout","_hoisted_3","type","$event","selectedDate","onChange","fetchDiary","_hoisted_4","diaryContent","_hoisted_5","innerHTML","formattedDiaryContent","_hoisted_6","_hoisted_7","_hoisted_8","editDiary","_hoisted_9","newDiaryContent","cols","rows","_hoisted_10","saveDiary"],"sources":["/Users/ewoo2/Library/CloudStorage/OneDrive-개인/문서/GitHub/공개SW프로젝트-Mac/Internet_Programming/my-diary-app/client/src/components/MainPage.vue"],"sourcesContent":["<template>\n  <div class=\"main-page\">\n    <!-- 사용자 정보, 마이페이지 및 로그아웃 링크 -->\n    <div class=\"user-info\">\n      {{ userName }}님 | \n      <router-link to=\"/mypage\">마이페이지</router-link> |\n      <a href=\"#\" @click=\"logout\">로그아웃</a>\n    </div>\n\n    <!-- 메인 컨테이너 -->\n    <div class=\"main-container\">\n      <!-- 날짜 선택 -->\n      일자 : <input type=\"date\" v-model=\"selectedDate\" @change=\"fetchDiary\">\n      <hr>\n      <!-- 일기장 표시 -->\n      <div v-if=\"diaryContent\" class=\"diary-content\">\n        <div v-html=\"formattedDiaryContent\"></div>\n        <br><br>\n        <button @click=\"editDiary\">수정</button>\n      </div>\n      <div v-else class=\"empty-diary\">\n        <textarea v-model=\"newDiaryContent\" cols=\"50\" rows=\"20\"></textarea>\n        <br>\n        <button @click=\"saveDiary\">저장</button>\n      </div>\n    </div>\n  </div>\n</template>\n  \n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      userName: '익명',\n      selectedDate: this.getCurrentDateInKST(),\n      diaryContent: null,\n      newDiaryContent: '',\n    };\n  },\n  computed: {\n    formattedDiaryContent() {\n      return this.diaryContent.replace(/\\n/g, '<br>'); // 개행 문자를 <br> 태그로 변환\n    }\n  },\n  methods: {\n    getCurrentDateInKST() {\n      const now = new Date();\n      const utc = now.getTime() + (now.getTimezoneOffset() * 60000); // UTC 시간\n      const kstTime = new Date(utc + (3600000 * 9)); // UTC+9\n      return kstTime.toISOString().split('T')[0];\n    },\n\n    logout() {\n      // 로컬 스토리지에서 사용자 ID 삭제\n      localStorage.removeItem('userId');\n      // 로그인 페이지로 리디렉션\n      this.$router.push('/userlogin');\n    },\n\n    handleDateSelect(date) {\n      console.log('Selected date:', date);\n      this.$router.push({ name: 'WriteDiary', query: { date: date.toISOString() } });\n    },\n\n    editDiary() {\n      // 수정 모드 활성화\n      this.newDiaryContent = this.diaryContent;\n      this.diaryContent = null;\n    },\n\n    fetchUserName() {\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\n          params: {\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\n          }\n      })\n      .then(response => {\n          this.userName = response.data.name; // 사용자 이름 설정\n      })\n      .catch(error => {\n          console.error('Error fetching user name:', error);\n      });\n    },\n\n    fetchDiary() {\n      // 날짜 변경 시 기존 일기 내용 초기화\n      this.diaryContent = null;\n      this.newDiaryContent = '';\n\n      const userId = localStorage.getItem('userId');\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/diary/${this.selectedDate}`, {\n        params: { userId }\n      })\n      .then(response => {\n        // 해당 날짜의 일기 내용이 존재하는 경우\n        this.diaryContent = response.data.content;\n      })\n      .catch(error => {\n        if (error.response && error.response.status === 404) {\n          // 해당 날짜에 일기가 없는 경우\n          this.diaryContent = null;\n        } else {\n          console.error('Error fetching diary:', error);\n        }\n      });\n    },\n\n    saveDiary() {\n      const userId = localStorage.getItem('userId');\n      axios.post(`${process.env.VUE_APP_BACKEND_URL}/savediary`, {\n        user_id: userId,\n        date: this.selectedDate,\n        content: this.newDiaryContent\n      })\n      .then(() => {\n        this.diaryContent = this.newDiaryContent;\n        this.newDiaryContent = '';\n        alert('일기가 저장되었습니다.');\n      })\n      .catch(error => {\n        console.error('Error saving diary:', error);\n      });\n    }\n  },\n  created() {\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\n    axios.get(`${process.env.VUE_APP_BACKEND_URL}/current-kst-date`)\n    .then(response => {\n      this.selectedDate = response.data.date;\n      this.fetchDiary(); // 컴포넌트 생성 시 일기장 조회\n    })\n    .catch(error => {\n      console.error('Error fetching current KST date:', error);\n      this.fetchDiary(); // 컴포넌트 생성 시 일기장 조회\n    });\n\n    // 로컬 스토리지에서 사용자 ID 확인\n    const userId = localStorage.getItem('userId');\n\n    // 사용자 ID가 없으면 로그인 페이지로 리디렉션\n    if (!userId) {\n      alert(\"비정상적인 접근입니다.\");\n      this.$router.push('/userlogin');\n    }\n  }\n};\n</script>\n  \n<style>\n  .main-page {\n    padding: 20px;\n    max-width: 800px;\n    margin: auto;\n  }\n\n  .user-info {\n    text-align: right;\n    font-size: 1.2em;\n    margin-bottom: 20px;\n  }\n  \n  .main-container {\n    max-width: 500px;\n    margin: auto;\n    padding: 20px;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  }\n\n  .main-container input {\n    margin-bottom: 5px;\n  }\n\n   /* 모바일 화면용 스타일 */\n   @media (max-width: 600px) {\n    .main-container {\n      width: 100%;\n      padding: 10px;\n      box-sizing: border-box;\n    }\n\n    .diary-content, .empty-diary {\n      width: 100%;\n      box-sizing: border-box;\n    }\n\n    .diary-content textarea, .empty-diary textarea {\n      width: 100%;\n      box-sizing: border-box;\n    }\n  }\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EAEfA,KAAK,EAAC;AAAW;;EAOjBA,KAAK,EAAC;AAAgB;gCAGzBC,mBAAA,CAAI;;EAbVC,GAAA;EAe+BF,KAAK,EAAC;;mBAfrC;gCAiBQC,mBAAA,CAAI;gCAAAA,mBAAA,CAAI;;EAjBhBC,GAAA;EAoBkBF,KAAK,EAAC;;iCAEhBC,mBAAA,CAAI;;;uBArBVE,mBAAA,CAyBM,OAzBNC,UAyBM,GAxBJC,mBAAA,6BAAgC,EAChCJ,mBAAA,CAIM,OAJNK,UAIM,GAPVC,gBAAA,CAAAC,gBAAA,CAISC,KAAA,CAAAC,QAAQ,IAAG,MACd,iBAAAC,YAAA,CAA6CC,sBAAA;IAAhCC,EAAE,EAAC;EAAS;IAL/BC,OAAA,EAAAC,QAAA,CAKgC,MAAK,CALrCR,gBAAA,CAKgC,OAAK,E;IALrCS,CAAA;MAAAT,gBAAA,CAKmD,KAC7C,GAAAN,mBAAA,CAAoC;IAAjCgB,IAAI,EAAC,GAAG;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,MAAI,E,GAGlCf,mBAAA,aAAgB,EAChBJ,mBAAA,CAeM,OAfNsB,UAeM,GAdJlB,mBAAA,WAAc,EAXpBE,gBAAA,CAWoB,QACT,G,gBAAAN,mBAAA,CAA+D;IAAxDuB,IAAI,EAAC,MAAM;IAZ7B,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAYuChB,KAAA,CAAAiB,YAAY,GAAAD,MAAA;IAAGE,QAAM,EAAAR,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,UAAA,IAAAP,QAAA,CAAAO,UAAA,IAAAR,IAAA,CAAU;iEAAjCX,KAAA,CAAAiB,YAAY,E,GAC7CG,UAAI,EACJxB,mBAAA,YAAe,EACJI,KAAA,CAAAqB,YAAY,I,cAAvB3B,mBAAA,CAIM,OAJN4B,UAIM,GAHJ9B,mBAAA,CAA0C;IAArC+B,SAA8B,EAAtBX,QAAA,CAAAY;EAAqB,wBAhB1CC,UAAA,GAiBQC,UAAI,EAAAC,UAAI,EACRnC,mBAAA,CAAsC;IAA7BiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAgB,SAAA,IAAAhB,QAAA,CAAAgB,SAAA,IAAAjB,IAAA,CAAS;KAAE,IAAE,E,oBAE/BjB,mBAAA,CAIM,OAJNmC,UAIM,G,gBAHJrC,mBAAA,CAAmE;IArB3E,uBAAAkB,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAqB2BhB,KAAA,CAAA8B,eAAe,GAAAd,MAAA;IAAEe,IAAI,EAAC,IAAI;IAACC,IAAI,EAAC;iDAAhChC,KAAA,CAAA8B,eAAe,E,GAClCG,WAAI,EACJzC,mBAAA,CAAsC;IAA7BiB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAsB,SAAA,IAAAtB,QAAA,CAAAsB,SAAA,IAAAvB,IAAA,CAAS;KAAE,IAAE,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}