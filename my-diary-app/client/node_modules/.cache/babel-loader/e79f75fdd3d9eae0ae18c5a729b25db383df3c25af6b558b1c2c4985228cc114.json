{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newPassword: '',\n      confirmPassword: '',\n      isNewPasswordValid: false,\n      isConfirmPasswordValid: false,\n      userId: this.$route.query.userId\n    };\n  },\n  created() {\n    console.log(\"userId:\", this.userId);\n  },\n  computed: {\n    isFormValid() {\n      return this.isNewPasswordValid && this.isConfirmPasswordValid;\n    }\n  },\n  methods: {\n    validateNewPassword() {\n      this.isNewPasswordValid = this.newPassword.length > 0;\n    },\n    validateConfirmPassword() {\n      this.isConfirmPasswordValid = this.newPassword === this.confirmPassword;\n    },\n    updatePassword() {\n      if (!this.isNewPasswordValid || !this.isConfirmPasswordValid) {\n        alert(\"비밀번호 유효성 검사를 통과하지 못했습니다.\");\n        return;\n      }\n      if (!this.userId) {\n        console.error(\"userId is undefined, cannot update password.\");\n        return;\n      }\n      axios.post('http://localhost:3000/updatePassword', {\n        userId: this.userId,\n        newPassword: this.newPassword\n      }).then(() => {\n        alert(\"비밀번호가 성공적으로 변경되었습니다.\");\n        this.$router.push('/userlogin');\n      }).catch(error => {\n        console.error('비밀번호 변경 오류:', error);\n        alert('비밀번호 변경 중 오류가 발생했습니다.');\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newPassword","confirmPassword","isNewPasswordValid","isConfirmPasswordValid","userId","$route","query","created","console","log","computed","isFormValid","methods","validateNewPassword","length","validateConfirmPassword","updatePassword","alert","error","post","then","$router","push","catch"],"sources":["C:\\Users\\ewoo2\\OneDrive\\문서\\GitHub\\공개SW프로젝트-Win\\Internet_Programming\\my-diary-app\\client\\src\\components\\ResetPassword.vue"],"sourcesContent":["<template>\r\n    <div class=\"reset-password-container\">\r\n      <h1 class=\"reset-password-header\">비밀번호 재설정</h1>\r\n      <div class=\"inputs-container\">\r\n        <div>\r\n          <input type=\"password\" placeholder=\"새 비밀번호\" class=\"input-field\" v-model=\"newPassword\" @input=\"validateNewPassword\" :class=\"{ 'is-invalid': !isNewPasswordValid, 'is-valid': isNewPasswordValid }\" />\r\n          <p v-if=\"!isNewPasswordValid\" class=\"warning-text\">비밀번호를 입력해주세요.</p>\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" placeholder=\"새 비밀번호 확인\" class=\"input-field\" v-model=\"confirmPassword\" @input=\"validateConfirmPassword\" :class=\"{ 'is-invalid': !isConfirmPasswordValid, 'is-valid': isConfirmPasswordValid }\" />\r\n          <p v-if=\"!isConfirmPasswordValid\" class=\"warning-text\">같은 비밀번호를 입력해주세요.</p>\r\n        </div>\r\n        <button class=\"reset-password-btn\" @click=\"updatePassword\" :disabled=\"!isFormValid\">재설정</button>\r\n      </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        newPassword: '',\r\n        confirmPassword: '',\r\n        isNewPasswordValid: false,\r\n        isConfirmPasswordValid: false,\r\n        userId: this.$route.query.userId\r\n      };\r\n    },\r\n    created() {\r\n      console.log(\"userId:\", this.userId);\r\n    },\r\n    computed: {\r\n      isFormValid() {\r\n        return this.isNewPasswordValid && this.isConfirmPasswordValid;\r\n      }\r\n    },\r\n    methods: {\r\n      validateNewPassword() {\r\n        this.isNewPasswordValid = this.newPassword.length > 0;\r\n      },\r\n      validateConfirmPassword() {\r\n        this.isConfirmPasswordValid = this.newPassword === this.confirmPassword;\r\n      },\r\n      updatePassword() {\r\n        if (!this.isNewPasswordValid || !this.isConfirmPasswordValid) {\r\n            alert(\"비밀번호 유효성 검사를 통과하지 못했습니다.\");\r\n            return;\r\n        }\r\n        if (!this.userId) {\r\n          console.error(\"userId is undefined, cannot update password.\");\r\n          return;\r\n        }\r\n        axios.post('http://localhost:3000/updatePassword', {\r\n            userId: this.userId,\r\n            newPassword: this.newPassword\r\n        })\r\n        .then(() => {\r\n            alert(\"비밀번호가 성공적으로 변경되었습니다.\");\r\n            this.$router.push('/userlogin');\r\n        })\r\n        .catch(error => {\r\n            console.error('비밀번호 변경 오류:', error);\r\n            alert('비밀번호 변경 중 오류가 발생했습니다.');\r\n        });\r\n      }\r\n    }\r\n  };\r\n</script>\r\n  \r\n<style scoped>\r\n  .reset-password-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 20px;\r\n    border-radius: 10px;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n    width: 400px;\r\n    margin: auto;\r\n  }\r\n  \r\n  .reset-password-header {\r\n    font-size: 1.5rem;\r\n    color: #333;\r\n    margin-bottom: 20px;\r\n  }\r\n  \r\n  .inputs-container {\r\n    width: 100%;\r\n  }\r\n  \r\n  .input-field {\r\n    width: 250px;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  button {\r\n    width: 100%;\r\n    padding: 10px;\r\n    background-color: #007bff;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  button:disabled {\r\n    background-color: #ccc;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  .input-field.is-valid {\r\n    border: 1px solid green;\r\n  }\r\n  \r\n  .input-field.is-invalid {\r\n    border: 1px solid red;\r\n  }\r\n  \r\n  .warning-text {\r\n    color: red;\r\n    font-size: 0.8rem;\r\n    margin-top: -5px;\r\n  }\r\n</style>  "],"mappings":";AAkBE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE,KAAK;MACzBC,sBAAsB,EAAE,KAAK;MAC7BC,MAAM,EAAE,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF;IAC5B,CAAC;EACH,CAAC;EACDG,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,SAAS,EAAE,IAAI,CAACL,MAAM,CAAC;EACrC,CAAC;EACDM,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACT,kBAAiB,IAAK,IAAI,CAACC,sBAAsB;IAC/D;EACF,CAAC;EACDS,OAAO,EAAE;IACPC,mBAAmBA,CAAA,EAAG;MACpB,IAAI,CAACX,kBAAiB,GAAI,IAAI,CAACF,WAAW,CAACc,MAAK,GAAI,CAAC;IACvD,CAAC;IACDC,uBAAuBA,CAAA,EAAG;MACxB,IAAI,CAACZ,sBAAqB,GAAI,IAAI,CAACH,WAAU,KAAM,IAAI,CAACC,eAAe;IACzE,CAAC;IACDe,cAAcA,CAAA,EAAG;MACf,IAAI,CAAC,IAAI,CAACd,kBAAiB,IAAK,CAAC,IAAI,CAACC,sBAAsB,EAAE;QAC1Dc,KAAK,CAAC,0BAA0B,CAAC;QACjC;MACJ;MACA,IAAI,CAAC,IAAI,CAACb,MAAM,EAAE;QAChBI,OAAO,CAACU,KAAK,CAAC,8CAA8C,CAAC;QAC7D;MACF;MACApB,KAAK,CAACqB,IAAI,CAAC,sCAAsC,EAAE;QAC/Cf,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBJ,WAAW,EAAE,IAAI,CAACA;MACtB,CAAC,EACAoB,IAAI,CAAC,MAAM;QACRH,KAAK,CAAC,sBAAsB,CAAC;QAC7B,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC,YAAY,CAAC;MACnC,CAAC,EACAC,KAAK,CAACL,KAAI,IAAK;QACZV,OAAO,CAACU,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;QACnCD,KAAK,CAAC,uBAAuB,CAAC;MAClC,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}