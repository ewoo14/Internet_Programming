{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: '익명',\n      remainingTime: 600,\n      // 초단위 (10분)\n      timer: null\n    };\n  },\n  methods: {\n    showUserInfo() {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        alert(\"사용자 정보를 불러올 수 없습니다.\");\n        return;\n      }\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/userinfo/${userId}`).then(response => {\n        const userInfo = response.data;\n        alert(`귀하의 정보입니다.\\n이메일: ${userInfo.email}\\n이름: ${userInfo.name}\\n전화번호: ${userInfo.phone}`);\n      }).catch(error => {\n        console.error('Error fetching user info:', error);\n        alert('사용자 정보를 불러오는데 실패했습니다.');\n      });\n    },\n    ResetPassword() {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        alert(\"사용자 ID를 불러올 수 없습니다.\");\n        return;\n      }\n      this.$router.push({\n        path: '/reset-password',\n        query: {\n          userId\n        }\n      });\n    },\n    fetchUserName() {\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\n        params: {\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\n        }\n      }).then(response => {\n        this.userName = response.data.name; // 사용자 이름 설정\n      }).catch(error => {\n        console.error('Error fetching user name:', error);\n      });\n    },\n    resetTimer() {\n      this.remainingTime = 600; // 타이머를 10분으로 재설정\n    },\n    updateTimer() {\n      if (this.remainingTime > 0) {\n        this.remainingTime--;\n      } else {\n        this.logout(); // 타이머가 0이 되면 로그아웃 실행\n      }\n    },\n    logout() {\n      clearInterval(this.timerId); // 타이머 초기화\n      const userId = localStorage.getItem('userId');\n      if (userId) {\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/userlogout`, {\n          userId\n        }).then(() => {\n          localStorage.removeItem('userId');\n          this.$router.push('/userlogin'); // 로그인 페이지로 리디렉션\n        }).catch(error => {\n          console.error('로그아웃 실패:', error);\n        });\n      }\n    },\n    handleBeforeUnload() {\n      this.logout();\n    },\n    handleDateSelect(date) {\n      // 날짜를 선택하면 해당 날짜로 설정\n      this.selectedDate = date;\n      // 일기장 날짜를 선택한 날짜로 갱신\n      this.fetchDiary();\n    }\n  },\n  created() {\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\n\n    // 로컬 스토리지에서 사용자 ID 확인\n    const userId = localStorage.getItem('userId');\n\n    // 사용자 ID가 없으면 로그인 페이지로 리디렉션\n    if (!userId) {\n      alert(\"비정상적인 접근입니다.\");\n      this.$router.push('/userlogin');\n    }\n  },\n  mounted() {\n    this.timer = setInterval(this.updateTimer, 1000); // 1초마다 타이머 감소\n\n    // 사용자 활동 감지\n    window.addEventListener('mousemove', this.resetTimer);\n    window.addEventListener('keydown', this.resetTimer);\n  },\n  beforeUnmount() {\n    clearInterval(this.timer); // 컴포넌트가 제거되면 타이머 정리\n    window.removeEventListener('mousemove', this.resetTimer);\n    window.removeEventListener('keydown', this.resetTimer);\n  }\n};","map":{"version":3,"names":["axios","data","userName","remainingTime","timer","methods","showUserInfo","userId","localStorage","getItem","alert","get","process","env","VUE_APP_BACKEND_URL","then","response","userInfo","email","name","phone","catch","error","console","ResetPassword","$router","push","path","query","fetchUserName","params","resetTimer","updateTimer","logout","clearInterval","timerId","post","removeItem","handleBeforeUnload","handleDateSelect","date","selectedDate","fetchDiary","created","mounted","setInterval","window","addEventListener","beforeUnmount","removeEventListener"],"sources":["C:\\Users\\ewoo2\\OneDrive\\문서\\GitHub\\공개SW프로젝트-Win\\Internet_Programming\\my-diary-app\\client\\src\\components\\MyPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"timer-container\">\r\n    <div class=\"timer\">자동 로그아웃: {{ remainingTime }}초</div>\r\n  </div>\r\n  <div class=\"my-container\">\r\n    <!-- 페이지 제목 -->\r\n    <h1 class=\"my-title\">My Page</h1>\r\n\r\n    <!-- 사용자 이름 표시 -->\r\n    <div class=\"user-name-section\">\r\n      {{ userName }} 님\r\n    </div>\r\n\r\n    <!-- 내 정보 -->\r\n    <div class=\"user-info-section\" @click=\"showUserInfo\">\r\n      내 정보 조회\r\n    </div>\r\n\r\n    <!-- 비밀번호 재설정 -->\r\n    <div class=\"password-reset-section\" @click=\"ResetPassword\">\r\n      비밀번호 재설정\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userName: '익명',\r\n      remainingTime: 600, // 초단위 (10분)\r\n      timer: null\r\n    };\r\n  },\r\n  methods: {\r\n    showUserInfo() {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert(\"사용자 정보를 불러올 수 없습니다.\");\r\n        return;\r\n      }\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/userinfo/${userId}`)\r\n        .then(response => {\r\n          const userInfo = response.data;\r\n          alert(`귀하의 정보입니다.\\n이메일: ${userInfo.email}\\n이름: ${userInfo.name}\\n전화번호: ${userInfo.phone}`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user info:', error);\r\n          alert('사용자 정보를 불러오는데 실패했습니다.');\r\n        });\r\n    },\r\n    ResetPassword() {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert(\"사용자 ID를 불러올 수 없습니다.\");\r\n        return;\r\n      }\r\n      this.$router.push({ path: '/reset-password', query: { userId } });\r\n    },\r\n    fetchUserName() {\r\n      axios.get(`${process.env.VUE_APP_BACKEND_URL}/username`, {\r\n          params: {\r\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\r\n          }\r\n      })\r\n      .then(response => {\r\n          this.userName = response.data.name; // 사용자 이름 설정\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching user name:', error);\r\n      });\r\n    },\r\n    resetTimer() {\r\n      this.remainingTime = 600; // 타이머를 10분으로 재설정\r\n    },\r\n\r\n    updateTimer() {\r\n      if (this.remainingTime > 0) {\r\n        this.remainingTime--;\r\n      } else {\r\n        this.logout(); // 타이머가 0이 되면 로그아웃 실행\r\n      }\r\n    },\r\n    \r\n    logout() {\r\n      clearInterval(this.timerId); // 타이머 초기화\r\n      const userId = localStorage.getItem('userId');\r\n      if (userId) {\r\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/userlogout`, { userId })\r\n          .then(() => {\r\n            localStorage.removeItem('userId');\r\n            this.$router.push('/userlogin'); // 로그인 페이지로 리디렉션\r\n          })\r\n          .catch(error => {\r\n            console.error('로그아웃 실패:', error);\r\n          });\r\n      }\r\n    },\r\n\r\n    handleBeforeUnload() {\r\n      this.logout();\r\n    },\r\n\r\n    handleDateSelect(date) {\r\n      // 날짜를 선택하면 해당 날짜로 설정\r\n      this.selectedDate = date;\r\n      // 일기장 날짜를 선택한 날짜로 갱신\r\n      this.fetchDiary();\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\r\n    \r\n    // 로컬 스토리지에서 사용자 ID 확인\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    // 사용자 ID가 없으면 로그인 페이지로 리디렉션\r\n    if (!userId) {\r\n      alert(\"비정상적인 접근입니다.\");\r\n      this.$router.push('/userlogin');\r\n    }\r\n  },\r\n  mounted() {\r\n    this.timer = setInterval(this.updateTimer, 1000); // 1초마다 타이머 감소\r\n\r\n    // 사용자 활동 감지\r\n    window.addEventListener('mousemove', this.resetTimer);\r\n    window.addEventListener('keydown', this.resetTimer);\r\n  }, \r\n  beforeUnmount() {\r\n    clearInterval(this.timer); // 컴포넌트가 제거되면 타이머 정리\r\n    window.removeEventListener('mousemove', this.resetTimer);\r\n    window.removeEventListener('keydown', this.resetTimer);\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.timer-container {\r\n  text-align: left;\r\n  padding: 20px;\r\n}\r\n\r\n.my-container {\r\n  width: 300px; /* 가로 길이 100px 증가 */\r\n  height: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.my-title {\r\n  font-size: 3rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-name-section, .user-info-section, .password-reset-section {\r\n  width: 100%;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 30px 0;\r\n  cursor: pointer;\r\n  font-size: 30px;\r\n}\r\n\r\n.password-reset-section {\r\n  border-bottom: none;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}