{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-785efe34\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"find-account-container\"\n};\nconst _hoisted_2 = {\n  class: \"find-account-box\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"find-account-header\"\n}, \"아이디 찾기\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  class: \"inputs-container\"\n};\nconst _hoisted_5 = {\n  class: \"fields-container\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"warning-text\"\n};\nconst _hoisted_7 = {\n  key: 0,\n  class: \"warning-text\"\n};\nconst _hoisted_8 = [\"disabled\"];\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"hr\", {\n  class: \"divider\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"find-account-header\"\n}, \"비밀번호 재설정\", -1 /* HOISTED */));\nconst _hoisted_11 = {\n  class: \"inputs-container\"\n};\nconst _hoisted_12 = {\n  class: \"fields-container\"\n};\nconst _hoisted_13 = {\n  key: 0,\n  class: \"warning-text\"\n};\nconst _hoisted_14 = {\n  key: 0,\n  class: \"warning-text\"\n};\nconst _hoisted_15 = {\n  key: 0,\n  class: \"warning-text\"\n};\nconst _hoisted_16 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createCommentVNode(\" 아이디 찾기 섹션 \"), _hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"이름\",\n    class: _normalizeClass([\"input-field\", {\n      'is-invalid': !$data.isNameValid,\n      'is-valid': $data.isNameValid\n    }]),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.name = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.validateName && $options.validateName(...args))\n  }, null, 34 /* CLASS, NEED_HYDRATION */), [[_vModelText, $data.name]]), !$data.isNameValid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_6, \"이름을 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"전화번호\",\n    class: _normalizeClass([\"input-field\", {\n      'is-invalid': !$data.isPhoneValid,\n      'is-valid': $data.isPhoneValid\n    }]),\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.phone = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => $options.validatePhone && $options.validatePhone(...args)),\n    required: \"\"\n  }, null, 34 /* CLASS, NEED_HYDRATION */), [[_vModelText, $data.phone]]), !$data.isPhoneValid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_7, \"01x-xxxx-xxxx 형식으로 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)])]), _createElementVNode(\"button\", {\n    class: \"find-account-btn\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.findAccount && $options.findAccount(...args)),\n    disabled: !$options.isIdFormValid\n  }, \"찾기\", 8 /* PROPS */, _hoisted_8)]), _hoisted_9, _createCommentVNode(\" 비밀번호 찾기 섹션 \"), _hoisted_10, _createElementVNode(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    placeholder: \"이메일\",\n    class: _normalizeClass([\"input-field\", {\n      'is-invalid': !$data.isEmailValid,\n      'is-valid': $data.isEmailValid\n    }]),\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.email = $event),\n    onInput: _cache[6] || (_cache[6] = (...args) => $options.validateEmail && $options.validateEmail(...args))\n  }, null, 34 /* CLASS, NEED_HYDRATION */), [[_vModelText, $data.email]]), !$data.isEmailValid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_13, \"유효한 이메일 주소를 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"이름\",\n    class: _normalizeClass([\"input-field\", {\n      'is-invalid': !$data.isNameForPasswordValid,\n      'is-valid': $data.isNameForPasswordValid\n    }]),\n    \"onUpdate:modelValue\": _cache[7] || (_cache[7] = $event => $data.nameForPassword = $event),\n    onInput: _cache[8] || (_cache[8] = (...args) => $options.validateNameForPassword && $options.validateNameForPassword(...args))\n  }, null, 34 /* CLASS, NEED_HYDRATION */), [[_vModelText, $data.nameForPassword]]), !$data.isNameForPasswordValid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_14, \"이름을 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"전화번호\",\n    class: _normalizeClass([\"input-field\", {\n      'is-invalid': !$data.isPhoneValid,\n      'is-valid': $data.isPhoneValid\n    }]),\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.phone = $event),\n    onInput: _cache[10] || (_cache[10] = (...args) => $options.validatePhone && $options.validatePhone(...args)),\n    required: \"\"\n  }, null, 34 /* CLASS, NEED_HYDRATION */), [[_vModelText, $data.phone]]), !$data.isPhoneValid ? (_openBlock(), _createElementBlock(\"p\", _hoisted_15, \"01x-xxxx-xxxx 형식으로 입력해주세요.\")) : _createCommentVNode(\"v-if\", true)])])]), _createElementVNode(\"button\", {\n    class: \"reset-password-btn\",\n    onClick: _cache[11] || (_cache[11] = (...args) => $options.resetPassword && $options.resetPassword(...args)),\n    disabled: !$options.isPasswordFormValid\n  }, \"재설정\", 8 /* PROPS */, _hoisted_16)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","_createCommentVNode","_hoisted_3","_hoisted_4","_hoisted_5","type","placeholder","_normalizeClass","$data","isNameValid","_cache","$event","name","onInput","args","$options","validateName","_hoisted_6","isPhoneValid","phone","validatePhone","required","_hoisted_7","onClick","findAccount","disabled","isIdFormValid","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","isEmailValid","email","validateEmail","_hoisted_13","isNameForPasswordValid","nameForPassword","validateNameForPassword","_hoisted_14","_hoisted_15","resetPassword","isPasswordFormValid","_hoisted_16"],"sources":["/Users/ewoo2/Library/CloudStorage/OneDrive-개인/문서/GitHub/공개SW프로젝트-Mac/Internet_Programming/my-diary-app/client/src/components/FindAccount.vue"],"sourcesContent":["<template>\n    <div class=\"find-account-container\">\n      <div class=\"find-account-box\">\n        <!-- 아이디 찾기 섹션 -->\n        <h1 class=\"find-account-header\">아이디 찾기</h1>\n        <div class=\"inputs-container\">\n          <div class=\"fields-container\">\n            <div>\n              <input type=\"text\" placeholder=\"이름\" class=\"input-field\" v-model=\"name\" @input=\"validateName\" :class=\"{ 'is-invalid': !isNameValid, 'is-valid': isNameValid }\" />\n              <p v-if=\"!isNameValid\" class=\"warning-text\">이름을 입력해주세요.</p>\n            </div>\n            <div>\n              <input type=\"text\" placeholder=\"전화번호\" class=\"input-field\" v-model=\"phone\" @input=\"validatePhone\" :class=\"{ 'is-invalid': !isPhoneValid, 'is-valid': isPhoneValid }\" required>\n              <p v-if=\"!isPhoneValid\" class=\"warning-text\">01x-xxxx-xxxx 형식으로 입력해주세요.</p>\n            </div>\n          </div>\n          <button class=\"find-account-btn\" @click=\"findAccount\" :disabled=\"!isIdFormValid\">찾기</button>\n        </div>\n  \n        <hr class=\"divider\" />\n  \n        <!-- 비밀번호 찾기 섹션 -->\n        <h1 class=\"find-account-header\">비밀번호 재설정</h1>\n        <div class=\"inputs-container\">\n          <div class=\"fields-container\">\n            <div>\n              <input type=\"email\" placeholder=\"이메일\" class=\"input-field\" v-model=\"email\" @input=\"validateEmail\" :class=\"{ 'is-invalid': !isEmailValid, 'is-valid': isEmailValid }\" />\n              <p v-if=\"!isEmailValid\" class=\"warning-text\">유효한 이메일 주소를 입력해주세요.</p>\n            </div>\n            <div>\n              <input type=\"text\" placeholder=\"이름\" class=\"input-field\" v-model=\"nameForPassword\" @input=\"validateNameForPassword\" :class=\"{ 'is-invalid': !isNameForPasswordValid, 'is-valid': isNameForPasswordValid }\" />\n              <p v-if=\"!isNameForPasswordValid\" class=\"warning-text\">이름을 입력해주세요.</p>\n            </div>\n            <div>\n              <div>\n                <input type=\"text\" placeholder=\"전화번호\" class=\"input-field\" v-model=\"phone\" @input=\"validatePhone\" :class=\"{ 'is-invalid': !isPhoneValid, 'is-valid': isPhoneValid }\" required>\n                <p v-if=\"!isPhoneValid\" class=\"warning-text\">01x-xxxx-xxxx 형식으로 입력해주세요.</p>\n              </div>\n            </div>\n          </div>\n          <button class=\"reset-password-btn\" @click=\"resetPassword\" :disabled=\"!isPasswordFormValid\">재설정</button>\n        </div>\n      </div>\n    </div>\n</template>\n  \n<script>\n  import axios from 'axios';\n\n  export default {\n    data() {\n      return {\n        name: '',\n        phone: '',\n        email: '',\n        nameForPassword: '',\n        phoneForPassword: '',\n        isNameValid: false,\n        isPhoneValid: false,\n        isEmailValid: false,\n        isNameForPasswordValid: false,\n        isPhoneForPasswordValid: false\n      };\n    },\n    computed: {\n      isIdFormValid() {\n        return this.isNameValid && this.isPhoneValid;\n      },\n      isPasswordFormValid() {\n        return this.isEmailValid && this.isNameForPasswordValid && this.isPhoneForPasswordValid;\n      }\n    },\n    mounted() {\n      this.validateName();\n      this.validatePhone();\n      this.validateEmail();\n      this.validateNameForPassword();\n      this.validatePhoneForPassword();\n    },\n    methods: {\n      validateName() {\n        this.isNameValid = this.name.length > 0;\n      },\n      // 전화번호 필드에 대한 유효성 검사\n      validatePhone() {\n        const phonePattern = /^01[0-9]-[0-9]{3,4}-[0-9]{4}$/;\n        this.isPhoneValid = phonePattern.test(this.phone);\n      },\n      // 전화번호 입력 형식 자동 변경\n      formatPhoneNumber() {\n        let numbers = this.userData.phone.replace(/[^\\d]/g, ''); // 숫자만 추출\n        let formatted = '';\n\n        // 숫자를 형식에 맞게 '-' 추가\n        for (let i = 0; i < numbers.length; i++) {\n          if (i === 3 || i === 7) formatted += '-'; // 특정 위치에 '-' 추가\n          formatted += numbers[i];\n        }\n\n        // 최대 길이 제한 (010-XXXX-XXXX)\n        this.userData.phone = formatted.slice(0, 13);\n\n        // 전화번호 형식 검증 메소드 호출\n        this.validatePhone();\n      },\n      validateEmail() {\n        const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        this.isEmailValid = emailPattern.test(this.email);\n      },\n      validateNameForPassword() {\n        this.isNameForPasswordValid = this.nameForPassword.length > 0;\n      },\n      validatePhoneForPassword() {\n        const phonePattern = /^01[0-9]-[0-9]{3,4}-[0-9]{4}$/;\n        this.isPhoneForPasswordValid = phonePattern.test(this.phoneForPassword);\n      },\n      findAccount() {\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/findAccount`, {\n            name: this.name,\n            phone: this.phone\n        })\n        .then(response => {\n            if(response.data.email) {\n            alert(`귀하의 계정은 ${response.data.email}입니다.`);\n            this.$router.push('/');\n            } else {\n            alert('해당 정보로 조회할 수 없습니다.');\n            }\n        })\n        .catch(error => {\n            if (error.response && error.response.status === 404) {\n            // 일치하는 정보가 없는 경우\n            alert('잘못된 정보입니다.');\n            } else {\n            // 기타 서버 오류\n            console.error('계정 찾기 오류:', error);\n            alert('오류가 발생했습니다.');\n            }\n        });\n      },\n      resetPassword() {\n        axios.post(`${process.env.VUE_APP_BACKEND_URL}/requestPasswordReset`, {\n          email: this.email,\n          name: this.nameForPassword,\n          phone: this.phoneForPassword\n        })\n        .then(() => {\n          alert('비밀번호 재설정 링크가 이메일로 발송되었습니다.');\n        })\n        .catch(error => {\n          // 오류 처리\n          console.error('비밀번호 재설정 요청 오류:', error);\n          alert('오류가 발생했습니다.');\n        });\n      }\n    }\n  };\n</script>\n  \n<style scoped>\n.find-account-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 80vh;\n}\n\n.find-account-box {\n  background-color: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  width: 400px;\n  margin-bottom: 20px;\n}\n\n.inputs-container {\n  display: flex;\n  flex-direction: column;\n}\n\n.fields-container {\n  margin-bottom: 10px;\n}\n\n.find-account-header {\n  font-size: 1.5rem;\n  color: #333;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.input-field {\n  width: 250px;\n  padding: 10px;\n  margin-bottom: 7px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n}\n\nbutton {\n  width: 100%;\n  padding: 10px;\n  background-color: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\n.input-field.is-valid {\n  border: 1px solid green;\n}\n\n.input-field.is-invalid {\n  border: 1px solid red;\n}\n\n.warning-text {\n  color: red;\n  font-size: 0.8rem;\n  margin-top: -5px;\n}\n\n.divider {\n  margin: 20px 0;\n  border-top: 1px solid #ddd;\n}\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}