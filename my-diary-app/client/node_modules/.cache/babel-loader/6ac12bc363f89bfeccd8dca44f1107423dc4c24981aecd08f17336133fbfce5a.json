{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      userName: '익명'\n    };\n  },\n  methods: {\n    showUserInfo() {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        alert(\"사용자 정보를 불러올 수 없습니다.\");\n        return;\n      }\n      axios.get(`http://localhost:3000/userinfo/${userId}`).then(response => {\n        const userInfo = response.data;\n        alert(`귀하의 정보입니다.\\n이메일: ${userInfo.email}\\n이름: ${userInfo.name}\\n전화번호: ${userInfo.phone}`);\n      }).catch(error => {\n        console.error('Error fetching user info:', error);\n        alert('사용자 정보를 불러오는데 실패했습니다.');\n      });\n    },\n    ResetPassword() {\n      const userId = localStorage.getItem('userId');\n      if (!userId) {\n        alert(\"사용자 ID를 불러올 수 없습니다.\");\n        return;\n      }\n      this.$router.push({\n        path: '/reset-password',\n        query: {\n          userId\n        }\n      });\n    },\n    fetchUserName() {\n      axios.get('http://localhost:3000/username', {\n        params: {\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\n        }\n      }).then(response => {\n        this.userName = response.data.name; // 사용자 이름 설정\n      }).catch(error => {\n        console.error('Error fetching user name:', error);\n      });\n    }\n  },\n  created() {\n    this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\n  }\n};","map":{"version":3,"names":["axios","data","userName","methods","showUserInfo","userId","localStorage","getItem","alert","get","then","response","userInfo","email","name","phone","catch","error","console","ResetPassword","$router","push","path","query","fetchUserName","params","created"],"sources":["C:\\Users\\ewoo2\\OneDrive\\문서\\GitHub\\공개SW프로젝트-Win\\Internet_Programming\\my-diary-app\\client\\src\\components\\MyPage.vue"],"sourcesContent":["<template>\r\n  <div class=\"my-container\">\r\n    <!-- 페이지 제목 -->\r\n    <h1 class=\"my-title\">My Page</h1>\r\n\r\n    <!-- 사용자 이름 표시 -->\r\n    <div class=\"user-name-section\">\r\n      {{ userName }} 님\r\n    </div>\r\n\r\n    <!-- 내 정보 -->\r\n    <div class=\"user-info-section\" @click=\"showUserInfo\">\r\n      내 정보 조회\r\n    </div>\r\n\r\n    <!-- 비밀번호 재설정 -->\r\n    <div class=\"password-reset-section\" @click=\"ResetPassword\">\r\n      비밀번호 재설정\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      userName: '익명',\r\n    };\r\n  },\r\n  methods: {\r\n    showUserInfo() {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert(\"사용자 정보를 불러올 수 없습니다.\");\r\n        return;\r\n      }\r\n      axios.get(`http://localhost:3000/userinfo/${userId}`)\r\n        .then(response => {\r\n          const userInfo = response.data;\r\n          alert(`귀하의 정보입니다.\\n이메일: ${userInfo.email}\\n이름: ${userInfo.name}\\n전화번호: ${userInfo.phone}`);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user info:', error);\r\n          alert('사용자 정보를 불러오는데 실패했습니다.');\r\n        });\r\n    },\r\n    ResetPassword() {\r\n      const userId = localStorage.getItem('userId');\r\n      if (!userId) {\r\n        alert(\"사용자 ID를 불러올 수 없습니다.\");\r\n        return;\r\n      }\r\n      this.$router.push({ path: '/reset-password', query: { userId } });\r\n    },\r\n    fetchUserName() {\r\n      axios.get('http://localhost:3000/username', {\r\n          params: {\r\n          userId: localStorage.getItem('userId') // 사용자 ID 가져오기\r\n          }\r\n      })\r\n      .then(response => {\r\n          this.userName = response.data.name; // 사용자 이름 설정\r\n      })\r\n      .catch(error => {\r\n          console.error('Error fetching user name:', error);\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n      this.fetchUserName(); // 컴포넌트 생성 시 사용자 이름 조회\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.my-container {\r\n  width: 300px; /* 가로 길이 100px 증가 */\r\n  height: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n}\r\n\r\n.my-title {\r\n  font-size: 3rem;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.user-name-section, .user-info-section, .password-reset-section {\r\n  width: 100%;\r\n  border-bottom: 1px solid #ddd;\r\n  padding: 30px 0;\r\n  cursor: pointer;\r\n  font-size: 30px;\r\n}\r\n\r\n.password-reset-section {\r\n  border-bottom: none;\r\n}\r\n</style>"],"mappings":";AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,MAAMC,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAI,CAACF,MAAM,EAAE;QACXG,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACF;MACAR,KAAK,CAACS,GAAG,CAAE,kCAAiCJ,MAAO,EAAC,EACjDK,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,QAAO,GAAID,QAAQ,CAACV,IAAI;QAC9BO,KAAK,CAAE,oBAAmBI,QAAQ,CAACC,KAAM,SAAQD,QAAQ,CAACE,IAAK,WAAUF,QAAQ,CAACG,KAAM,EAAC,CAAC;MAC5F,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDT,KAAK,CAAC,uBAAuB,CAAC;MAChC,CAAC,CAAC;IACN,CAAC;IACDW,aAAaA,CAAA,EAAG;MACd,MAAMd,MAAK,GAAIC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAI,CAACF,MAAM,EAAE;QACXG,KAAK,CAAC,qBAAqB,CAAC;QAC5B;MACF;MACA,IAAI,CAACY,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,iBAAiB;QAAEC,KAAK,EAAE;UAAElB;QAAO;MAAE,CAAC,CAAC;IACnE,CAAC;IACDmB,aAAaA,CAAA,EAAG;MACdxB,KAAK,CAACS,GAAG,CAAC,gCAAgC,EAAE;QACxCgB,MAAM,EAAE;UACRpB,MAAM,EAAEC,YAAY,CAACC,OAAO,CAAC,QAAQ,EAAE;QACvC;MACJ,CAAC,EACAG,IAAI,CAACC,QAAO,IAAK;QACd,IAAI,CAACT,QAAO,GAAIS,QAAQ,CAACV,IAAI,CAACa,IAAI,EAAE;MACxC,CAAC,EACAE,KAAK,CAACC,KAAI,IAAK;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD,CAAC,CAAC;IACJ;EACF,CAAC;EACDS,OAAOA,CAAA,EAAG;IACN,IAAI,CAACF,aAAa,CAAC,CAAC,EAAE;EAC1B;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}